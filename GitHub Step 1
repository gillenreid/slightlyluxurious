#
#                                                                                 Introduction to Programming COMP07027
#                                                                                      Programming Assessment T2 (Step1)
#                                                                                         by Gillen Reid and JS Maraver
#
#
#        INFO= ***Please, input data after a question even if a 'None' message is displayed. Thanks.***
#----------------------------------------------------------------------------------------------------------------Modules


import easygui
import json
import pickle
import random
import datetime
#--------------------------------------------------------------------------------------------------------Welcome message

favourite = easygui.msgbox('This program was created to work using CLI.\nWritten by Gillen Reid & JS Maraver.\n\n\nWe hope you enjoy it.', '*PPCE* INVENTORY SYSTEM - Welcome!', ('Start!'))

#-------------------------------------------------------------------------------------------------------Global variables
now = datetime.datetime.now()
total_Stock =[]
#------------------------------------------------------------------------------------------------------------------Batch

def creating_batch():
    class Batch:

        def __init__(self):
           print()
           print("..........INSERT BATCH DETAILS..........")
           print()
           self.batch_number=input(">>> Autogenerate batch number ? (Y/N) = ")
           self.b_autogenerated=()

           if  self.batch_number == "y":
               self.count = 0
               self.total = 0
               self.serial =self.count + 1
               self.b_autogenerated = datetime.datetime.now().strftime("%d%m%y")

               print(">>> New batch number =" ,self.b_autogenerated,self.serial)


           elif self.batch_number == "n":
                self.b_autogenerated=input(print(">>> Manual batch number = "))

           else:
               print(":::::: Invalid option ::::::")

           self.batch_components=int(input(">>> How many components ? (1-999) = "))



           self.batch_date=input(">>> Date Stored (DD-MM-YY)= ")



    batch1=Batch()

    batch_list={batch1.b_autogenerated:batch1}
    print()
    print(">>>Question.....?")
    prompt=input(print(">>> Do you want so see the batch saved ? (Y/N)= "))

    if prompt== "y":

        b_autogenerated_N=input(">>> Enter batch number = ")

        if b_autogenerated_N in batch_list.keys():
            bt=batch_list[b_autogenerated_N]
            print()
            print("**********************************Batch info")
            print("Batch number=",bt.b_autogenerated,"\nComponents=",bt.batch_components,"\nDate created= ",bt.batch_date)
            print("****************************************done")

        else:
            print()
            print("::::::Batch not found::::::")
            print()

    elif prompt == "n":
            print(".......................................OK")

    else:
         print()
         print("::::::Wrong batch::::::")
         print()

    print

    creating_component()



#-------------------------------------------------------------------------------------------------------------Components
def creating_component():

    class Components:

        def __init__(self):
            print()
            print("..........INSERT COMPONENT INFO..........")
            print()
            self.comp_serial=input(">>> Component Serial Number= ")
            self.comp_type=input(">>> Select type of component: (1) Winglet Strut,(2) Door Handle ,(3) Rudder Pin= ")
            self.type_c =()

            if self.comp_type == "1":
                    self.type_c = "Winglet Strut"

            elif self.comp_type == "2":
                    self.type_c = "Door Handle"

            elif self.comp_type == "3":
                    self.type_c = "Rudder Pin"
            else:
                    print()
                    print("::::::Invalid input::::::")
                    print()

            self.comp_finish=input(">>> Finished/Unfinished (f/u)= ")
            self.c_f=()

            if self.comp_finish == "f":
               self.c_f="Painted"

            elif self.comp_finish == "u":
                 self.c_f="Unpainted"

            else:
                print()
                print("::::::Invalid input::::::")
                print()

            self.comp_date_man=datetime.datetime.now().strftime("%d-%m-%y")
            self.air_type=input(print(">>> Select aircraft aircraft (1)A320 Series,(2)A380 Series = "))
            self.aircraft_series=()

            if self.air_type == "1":
               self.aircraft_series = "Airbus A320"

            elif self.air_type == "2":
                 self.aircraft_series = "Airbus A380"

            else:
                print()
                print("::::::Invalid input::::::")
                print()

            print()
            print(">>>Question.....?")

    component1=Components()
    component_list={component1.comp_serial:component1}

    prompt=input(print(">>> Do you want to see the component info ? (Y/N) ="))

    if prompt == "y":
        comp_serial=input(">>> Enter component's serial number= ")



        if comp_serial in component_list.keys():
            cmp=component_list[comp_serial]
            print()
            print("******************************Component Info")
            print("Serial number= ",cmp.comp_serial,"\nType= ",cmp.type_c,"\nFinish= ",cmp.c_f,"\nDate manufactured= ",cmp.comp_date_man,"\nAircraft= ",cmp.aircraft_series)
            print("****************************************done")

    elif prompt == "n":
        print()
        print(".......................................OK")

    else:

        print("::::::Component not found::::::")


print



#-------------------------------------------------------------------------------------------------------------------Menu
def main():
    print('WELCOME TO THE *PPCE* INVENTORY SYSTEM!')
    print("")
    print("CHOOSE AN OPTION FROM THE MENU:")
    print("------------------------------")


    while True:

      print('(1).CREATE A NEW BATCH')
      print('(2).QUIT')

      print()

      choice=input('OPTION=  ')

      if choice == '1':

         creating_batch()
         print("")
         print("CHOOSE AN OPTION:")


      elif choice == '2':

        print('.........................................QUITING.')
        print('THANKS FOR USING *PPCE* INVENTORY SYSTEM.BYE BYE!')
        break

      else:
        print()
        print('::::::Invalid option.Please try again::::::')
        print()

#Executing functions in order-----------------------------------------------------------------------------Program Starts


main()

#---------------------------------------------------------------------------------------------------------End of program
